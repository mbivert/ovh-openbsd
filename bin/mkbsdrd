#!/bin/sh

set -e

tmpd=/tmp

conf=

PATH=$PATH:`dirname $0`

# Dependencies
if ! which getbsdrd   >/dev/null; then exit 1; fi
if ! which patchbsdrd >/dev/null; then exit 1; fi

# Input:
#	$1 : exit code
help() {
	p=`basename $0`
	cat <<EOF
NAME
	$p

SYNOPSYS
	$p [-h]
	$p [-v version ] [-a arch] [-m mirror] [-p mpath] [-i install.conf]
	   [-r remote] [-w rwd] [path/to/bsd.rd]

DESCRIPTION
	$p fetch and augment an OpenBSD bsd.rd with the given install.conf,
	where:

EOF
	getbsdrd   -h | awk '/DESCRIPTION/{x=1} x && /^	  [a-z]+/'
	patchbsdrd -h | awk '/DESCRIPTION/{x=1} x && /^	  [a-z]+/'
cat <<EOF

	If no bsd.rd output path is specified, resulting bsd.rd is sent
	to stdout.

SEE ALSO
	autoinstall(8)

EOF
	exit $1
}

if [ "$1" = "-h" ] && [ "$2" = "" ]; then help 0; fi

while getopts v:a:m:p:i:r:w:c: x; do
	case "$x" in
		v) version="-v $OPTARG" ;;
		a) arch="-a $OPTARG"    ;;
		m) mirror="-m $OPTARG"  ;;
		p) mpath="-p $OPTARG"   ;;
		i) install="-i $OPTARG" ;;
		r) remote="-r $OPTARG"  ;;
		w) rwd="-w $OPTARG"     ;;
	esac
done
shift `expr $OPTIND - 1`

# Output bsd.rd to stdout by default.
out=$1; if [ -z "$1" ]; then out=/dev/stdout; fi

getbsdrd $version $arch $mirror $mpath | \
	patchbsdrd $install $remote $rwd > $out

